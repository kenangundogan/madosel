{"version":3,"sources":["webpack:///./js/components/madosel-modal.js"],"names":["window","Modal","modalCloseFunc","selector","options","modalContainer","classList","remove","setTimeout","dataPostion","dataSize","modalWrapper","style","dataTransition","document","querySelectorAll","forEach","modalButton","dataTarget","getAttribute","modalClose","querySelector","addEventListener","add","transition","event","key","modalCloseEventFunc","modalEventFunc","modalGetAttr"],"mappings":"AA2EAA,OAAOC,MAnEO,WA0DV,SAASC,EAAeC,EAAUC,GAC9BD,EAASE,eAAeC,UAAUC,OAAO,UAAW,aACpDC,YAAW,WACPL,EAASE,eAAeC,UAAUC,OAAOH,EAAQK,YAAaL,EAAQM,SAAU,QAChFN,EAAQO,aAAaC,MAAQ,KAC9BR,EAAQS,gBA9DMC,SAASC,iBAAiB,aAClCC,SAAQ,SAAAC,GACjB,IAAMC,EAAaD,EAAYE,aAAa,gBAShD,SAAsBhB,GAClB,GAAIA,EAASE,eAAgB,CACzB,IAAMe,EAAajB,EAASE,eAAegB,cAAc,gBACnDV,EAAeR,EAASE,eAAegB,cAAc,kBACvDZ,EAAcN,EAASE,eAAec,aAAa,iBACnDT,EAAWP,EAASE,eAAec,aAAa,aAChDN,EAAiBV,EAASE,eAAec,aAAa,mBACvC,IAAfV,GAAoC,MAAfA,IAAuBA,EAAc,UAC9C,IAAZC,GAA8B,MAAZA,IAAoBA,EAAW,SAC/B,IAAlBG,GAA0C,MAAlBA,IAA0BA,EAAiB,OACvET,QAAU,CACNgB,aACAT,eACAF,cACAC,WACAG,kBAMZ,SAAwBV,EAAUC,GAC9BD,EAASc,YAAYK,iBAAiB,SAAS,WAC3CnB,EAASE,eAAeC,UAAUiB,IAAI,OAAQnB,EAAQK,YAAaL,EAAQM,UAC3EF,YAAW,WACPJ,EAAQO,aAAaC,MAAMY,WAA3B,UAA2CpB,EAAQS,eAAnD,MACAV,EAASE,eAAeC,UAAUiB,IAAI,WACtCpB,EAASE,eAAeC,UAAUiB,IAAI,eACvC,GAKX,SAA6BpB,EAAUC,GAC/BA,EAAQgB,aACRhB,EAAQgB,WAAWE,iBAAiB,SAAS,WACzCpB,EAAeC,EAAUC,MAE7BU,SAASQ,iBAAiB,WAAW,SAACG,GAChB,WAAdA,EAAMC,KAAkC,QAAdD,EAAMC,KAChCxB,EAAeC,EAAUC,OAXjCuB,CAAoBxB,EAAUC,MAZ9BwB,CAAezB,EAAUC,UApB7ByB,CAJiB,CACbZ,cACAZ,eAHmBS,SAASO,cAAcH","file":"js/madosel-modal.min.js","sourcesContent":["/*!\n * Madosel Modal 1.0.0-alpha10\n * Copyright 2020-2021 Kenan Gündoğan\n * https://www.madosel.com\n * Licensed under MIT https://github.com/kenangundogan/madosel/blob/master/LICENSE\n * Released under the MIT License\n */\n\nconst Modal = function () {\n    const modalButtons = document.querySelectorAll(\".modalBtn\");\n    modalButtons.forEach(modalButton => {\n        const dataTarget = modalButton.getAttribute(\"data-target\");\n        const modalContainer = document.querySelector(dataTarget);\n        const selector = {\n            modalButton,\n            modalContainer\n        }\n        modalGetAttr(selector);\n    });\n\n    function modalGetAttr(selector) {\n        if (selector.modalContainer) {\n            const modalClose = selector.modalContainer.querySelector(\".modal-close\");\n            const modalWrapper = selector.modalContainer.querySelector(\".modal-wrapper\");\n            let dataPostion = selector.modalContainer.getAttribute(\"data-position\");\n            let dataSize = selector.modalContainer.getAttribute(\"data-size\");\n            let dataTransition = selector.modalContainer.getAttribute(\"data-transition\");\n            if (dataPostion == \"\" || dataPostion == null) { dataPostion = \"center\"; }\n            if (dataSize == \"\" || dataSize == null) { dataSize = \"small\"; }\n            if (dataTransition == \"\" || dataTransition == null) { dataTransition = \"300\"; }\n            options = {\n                modalClose,\n                modalWrapper,\n                dataPostion,\n                dataSize,\n                dataTransition\n            }\n            modalEventFunc(selector, options);\n        }\n    }\n\n    function modalEventFunc(selector, options) {\n        selector.modalButton.addEventListener(\"click\", () => {\n            selector.modalContainer.classList.add(\"show\", options.dataPostion, options.dataSize);\n            setTimeout(() => {\n                options.modalWrapper.style.transition = `${options.dataTransition}ms`;\n                selector.modalContainer.classList.add(\"visible\");\n                selector.modalContainer.classList.add(\"transform\");\n            }, 0);\n            modalCloseEventFunc(selector, options);\n        });\n    }\n\n    function modalCloseEventFunc(selector, options) {\n        if (options.modalClose) {\n            options.modalClose.addEventListener(\"click\", () => {\n                modalCloseFunc(selector, options);\n            });\n            document.addEventListener('keydown', (event) => {\n                if (event.key === \"Escape\" || event.key === \"Esc\") {\n                    modalCloseFunc(selector, options);\n                }\n            });\n        }\n    }\n\n    function modalCloseFunc(selector, options) {\n        selector.modalContainer.classList.remove(\"visible\", \"transform\");\n        setTimeout(() => {\n            selector.modalContainer.classList.remove(options.dataPostion, options.dataSize, \"show\");\n            options.modalWrapper.style = \"\";\n        }, options.dataTransition);\n    }\n}\n\nwindow.Modal = Modal;"],"sourceRoot":""}
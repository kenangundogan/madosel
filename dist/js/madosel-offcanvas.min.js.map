{"version":3,"sources":["webpack:///./js/components/madosel-offcanvas.js"],"names":["window","Offcanvas","offcanvasCloseFunc","selector","options","offcanvasContainer","classList","remove","setTimeout","dataPostion","dataSize","offcanvasWrapper","style","dataTransition","document","querySelectorAll","forEach","offcanvasButton","dataTarget","getAttribute","offcanvasClose","querySelector","addEventListener","add","transition","event","key","offcanvasCloseEventFunc","offcanvasEventFunc","offcanvasGetAttr"],"mappings":"AA2EAA,OAAOC,UAnEW,WA0Dd,SAASC,EAAmBC,EAAUC,GAClCD,EAASE,mBAAmBC,UAAUC,OAAO,UAAW,aACxDC,YAAW,WACPL,EAASE,mBAAmBC,UAAUC,OAAOH,EAAQK,YAAaL,EAAQM,SAAU,QACpFN,EAAQO,iBAAiBC,MAAQ,KAClCR,EAAQS,gBA9DUC,SAASC,iBAAiB,iBAClCC,SAAQ,SAAAC,GACrB,IAAMC,EAAaD,EAAgBE,aAAa,gBASpD,SAA0BhB,GACtB,GAAIA,EAASE,mBAAoB,CAC7B,IAAMe,EAAiBjB,EAASE,mBAAmBgB,cAAc,oBAC3DV,EAAmBR,EAASE,mBAAmBgB,cAAc,sBAC/DZ,EAAcN,EAASE,mBAAmBc,aAAa,iBACvDT,EAAWP,EAASE,mBAAmBc,aAAa,aACpDN,EAAiBV,EAASE,mBAAmBc,aAAa,mBAC3C,IAAfV,GAAoC,MAAfA,IAAuBA,EAAc,QAC9C,IAAZC,GAA8B,MAAZA,IAAoBA,EAAW,SAC/B,IAAlBG,GAA0C,MAAlBA,IAA0BA,EAAiB,OACvET,QAAU,CACNgB,iBACAT,mBACAF,cACAC,WACAG,kBAMZ,SAA4BV,EAAUC,GAClCD,EAASc,gBAAgBK,iBAAiB,SAAS,WAC/CnB,EAASE,mBAAmBC,UAAUiB,IAAI,OAAQnB,EAAQK,YAAaL,EAAQM,UAC/EF,YAAW,WACPJ,EAAQO,iBAAiBC,MAAMY,WAA/B,UAA+CpB,EAAQS,eAAvD,MACAV,EAASE,mBAAmBC,UAAUiB,IAAI,WAC1CpB,EAASE,mBAAmBC,UAAUiB,IAAI,eAC3C,GAKX,SAAiCpB,EAAUC,GACnCA,EAAQgB,iBACRhB,EAAQgB,eAAeE,iBAAiB,SAAS,WAC7CpB,EAAmBC,EAAUC,MAEjCJ,OAAOsB,iBAAiB,WAAW,SAACG,GACd,WAAdA,EAAMC,KAAkC,QAAdD,EAAMC,KAChCxB,EAAmBC,EAAUC,OAXrCuB,CAAwBxB,EAAUC,MAZlCwB,CAAmBzB,EAAUC,UApBjCyB,CAJiB,CACbZ,kBACAZ,mBAHuBS,SAASO,cAAcH","file":"js/madosel-offcanvas.min.js","sourcesContent":["/*!\n * Madosel Offcanvas 1.0.0-alpha12\n * Copyright 2020-2021 Kenan Gündoğan\n * https://www.madosel.com\n * Licensed under MIT https://github.com/kenangundogan/madosel/blob/master/LICENSE\n * Released under the MIT License\n */\n\nconst Offcanvas = function () {\n    const offcanvasButtons = document.querySelectorAll(\".offcanvasBtn\");\n    offcanvasButtons.forEach(offcanvasButton => {\n        const dataTarget = offcanvasButton.getAttribute(\"data-target\");\n        const offcanvasContainer = document.querySelector(dataTarget);\n        const selector = {\n            offcanvasButton,\n            offcanvasContainer\n        }\n        offcanvasGetAttr(selector);\n    });\n\n    function offcanvasGetAttr(selector) {\n        if (selector.offcanvasContainer) {\n            const offcanvasClose = selector.offcanvasContainer.querySelector(\".offcanvas-close\");\n            const offcanvasWrapper = selector.offcanvasContainer.querySelector(\".offcanvas-wrapper\");\n            let dataPostion = selector.offcanvasContainer.getAttribute(\"data-position\");\n            let dataSize = selector.offcanvasContainer.getAttribute(\"data-size\");\n            let dataTransition = selector.offcanvasContainer.getAttribute(\"data-transition\");\n            if (dataPostion == \"\" || dataPostion == null) { dataPostion = \"left\"; }\n            if (dataSize == \"\" || dataSize == null) { dataSize = \"small\"; }\n            if (dataTransition == \"\" || dataTransition == null) { dataTransition = \"300\"; }\n            options = {\n                offcanvasClose,\n                offcanvasWrapper,\n                dataPostion,\n                dataSize,\n                dataTransition\n            }\n            offcanvasEventFunc(selector, options);\n        }\n    }\n\n    function offcanvasEventFunc(selector, options) {\n        selector.offcanvasButton.addEventListener(\"click\", () => {\n            selector.offcanvasContainer.classList.add(\"show\", options.dataPostion, options.dataSize);\n            setTimeout(() => {\n                options.offcanvasWrapper.style.transition = `${options.dataTransition}ms`;\n                selector.offcanvasContainer.classList.add(\"visible\");\n                selector.offcanvasContainer.classList.add(\"transform\");\n            }, 0);\n            offcanvasCloseEventFunc(selector, options);\n        });\n    }\n\n    function offcanvasCloseEventFunc(selector, options) {\n        if (options.offcanvasClose) {\n            options.offcanvasClose.addEventListener(\"click\", () => {\n                offcanvasCloseFunc(selector, options);\n            });\n            window.addEventListener(\"keydown\", (event) => {\n                if (event.key === \"Escape\" || event.key === \"Esc\") {\n                    offcanvasCloseFunc(selector, options);\n                }\n            });\n        }\n    }\n\n    function offcanvasCloseFunc(selector, options) {\n        selector.offcanvasContainer.classList.remove(\"visible\", \"transform\");\n        setTimeout(() => {\n            selector.offcanvasContainer.classList.remove(options.dataPostion, options.dataSize, \"show\");\n            options.offcanvasWrapper.style = \"\";\n        }, options.dataTransition);\n    }\n}\n\nwindow.Offcanvas = Offcanvas;"],"sourceRoot":""}
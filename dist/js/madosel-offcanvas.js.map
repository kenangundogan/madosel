{"version":3,"sources":["webpack:///./js/components/madosel-offcanvas.js"],"names":["Offcanvas","offcanvasButtons","document","querySelectorAll","forEach","offcanvasButton","dataTarget","getAttribute","offcanvasContainer","querySelector","selector","offcanvasGetAttr","offcanvasClose","offcanvasWrapper","dataPostion","dataSize","dataTransition","options","offcanvasEventFunc","addEventListener","classList","add","setTimeout","style","transition","offcanvasCloseEventFunc","offcanvasCloseFunc","window","event","key","remove"],"mappings":"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","file":"js/madosel-offcanvas.js","sourcesContent":["/*!\n * Madosel Offcanvas 1.0.0-alpha7\n * Copyright 2020-2021 Kenan Gündoğan\n * https://www.madosel.com\n * Licensed under MIT https://github.com/kenangundogan/madosel/blob/master/LICENSE\n * Released under the MIT License\n */\n\nconst Offcanvas = function () {\n    const offcanvasButtons = document.querySelectorAll(\".offcanvasBtn\");\n    offcanvasButtons.forEach(offcanvasButton => {\n        const dataTarget = offcanvasButton.getAttribute(\"data-target\");\n        const offcanvasContainer = document.querySelector(dataTarget);\n        const selector = {\n            offcanvasButton,\n            offcanvasContainer\n        }\n        offcanvasGetAttr(selector);\n    });\n\n    function offcanvasGetAttr(selector) {\n        if (selector.offcanvasContainer) {\n            const offcanvasClose = selector.offcanvasContainer.querySelector(\".offcanvas-close\");\n            const offcanvasWrapper = selector.offcanvasContainer.querySelector(\".offcanvas-wrapper\");\n            let dataPostion = selector.offcanvasContainer.getAttribute(\"data-position\");\n            let dataSize = selector.offcanvasContainer.getAttribute(\"data-size\");\n            let dataTransition = selector.offcanvasContainer.getAttribute(\"data-transition\");\n            if (dataPostion == \"\" || dataPostion == null) { dataPostion = \"left\"; }\n            if (dataSize == \"\" || dataSize == null) { dataSize = \"small\"; }\n            if (dataTransition == \"\" || dataTransition == null) { dataTransition = \"300\"; }\n            options = {\n                offcanvasClose,\n                offcanvasWrapper,\n                dataPostion,\n                dataSize,\n                dataTransition\n            }\n            offcanvasEventFunc(selector, options);\n        }\n    }\n\n    function offcanvasEventFunc(selector, options) {\n        selector.offcanvasButton.addEventListener(\"click\", () => {\n            selector.offcanvasContainer.classList.add(\"show\", options.dataPostion, options.dataSize);\n            setTimeout(() => {\n                options.offcanvasWrapper.style.transition = `${options.dataTransition}ms`;\n                selector.offcanvasContainer.classList.add(\"visible\");\n                selector.offcanvasContainer.classList.add(\"transform\");\n            }, 0);\n            offcanvasCloseEventFunc(selector, options);\n        });\n    }\n\n    function offcanvasCloseEventFunc(selector, options) {\n        if (options.offcanvasClose) {\n            options.offcanvasClose.addEventListener(\"click\", () => {\n                offcanvasCloseFunc(selector, options);\n            });\n            window.addEventListener(\"keydown\", (event) => {\n                if (event.key === \"Escape\" || event.key === \"Esc\") {\n                    offcanvasCloseFunc(selector, options);\n                }\n            });\n        }\n    }\n\n    function offcanvasCloseFunc(selector, options) {\n        selector.offcanvasContainer.classList.remove(\"visible\", \"transform\");\n        setTimeout(() => {\n            selector.offcanvasContainer.classList.remove(options.dataPostion, options.dataSize, \"show\");\n            options.offcanvasWrapper.style = \"\";\n        }, options.dataTransition);\n    }\n}\n\nwindow.Offcanvas = Offcanvas;"],"sourceRoot":""}